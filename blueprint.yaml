tosca_definitions_version: cloudify_dsl_1_3

description: >
  Deploys a simple HTML file to NodeJS.

imports:
  - http://cloudify.co/spec/cloudify/5.0.0/types.yaml

inputs:
  infra_blueprint:
    description: >
      Name of certified blueprint to deploy.
    type: string
    constraints:
      - valid_values:
          - nodejs-aws-tf
          - nodejs-aws-vm
          - nodejs-azure-appservice
          - nodejs-azure-vm
          - nodejs-azure-vm-arm
          - nodejs-openstack

  infra_inputs:
    description: >
      Inputs that will be passed on to the certified blueprint.
    default: {}

  app_content:
    type: string
    default: 'resources/index.html'

node_templates:
  nodejs:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint:
          id: { get_input: infra_blueprint }
          external_resource: true
        deployment:
          inputs: { get_input: infra_inputs }

  app_content:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/ftp-upload.sh
          executor: central_deployment_agent
          inputs:
            username: { get_capability: [ { get_attribute: [ nodejs, deployment, id ] }, username ] }
            password: { get_capability: [ { get_attribute: [ nodejs, deployment, id ] }, password ] }
            endpoint: { get_capability: [ { get_attribute: [ nodejs, deployment, id ] }, endpoint ] }
            resource_path: { get_input: app_content }
    relationships:
      - type: cloudify.relationships.depends_on
        target: nodejs

outputs:
  base_url:
    description: Application URL
    value: { get_capability: [ { get_attribute: [ nodejs, deployment, id ] }, base_url ] }
